apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    component: kafka-consumer
    logging-infra: kafka
    provider: openshift
  name: kafka-consumer
  namespace: openshift-logging
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      component: kafka-consumer
      logging-infra: kafka
      provider: openshift
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        component: kafka-consumer
        logging-infra: kafka
        provider: openshift
      name: kafka-consumer
    spec:
      containers:
      - command:
        - /bin/bash
        - -ce
        - ./bin/kafka-console-consumer.sh --bootstrap-server kafka.openshift-logging.svc.cluster.local:9092
          --topic clo-topic --from-beginning | tee /shared/consumed.logs
        image: solsson/kafka:2.4.1
        imagePullPolicy: IfNotPresent
        name: kafka-consumer
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /shared
          name: shared
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - ./bin/kafka-topics.sh
        - --zookeeper
        - zookeeper.openshift-logging.svc.cluster.local:2181
        - --create
        - --if-not-exists
        - --topic
        - clo-topic
        - --partitions
        - "1"
        - --replication-factor
        - "1"
        image: solsson/kafka-cli@sha256:9fa3306e9f5d18283d10e01f7c115d8321eedc682f262aff784bd0126e1f2221
        imagePullPolicy: IfNotPresent
        name: topic-create
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: shared
