apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: kafka
    component: kafka
    provider: openshift
  name: kafka
  namespace: openshift-logging
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kafka
        component: kafka
        provider: openshift
    spec:
      containers:
      - command:
        - ./bin/kafka-server-start.sh
        - /etc/kafka/server.properties
        env:
        - name: CLASSPATH
          value: /opt/kafka/libs/extensions/*
        - name: KAFKA_LOG4J_OPTS
          value: -Dlog4j.configuration=file:/etc/kafka/log4j.properties
        - name: JMX_PORT
          value: "5555"
        image: solsson/kafka:2.4.1
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -ce
              - kill -s TERM 1; while $(kill -0 1 2>/dev/null); do sleep 1; done
        name: broker
        ports:
        - containerPort: 9092
          name: inside
          protocol: TCP
        - containerPort: 9094
          name: outide
          protocol: TCP
        - containerPort: 5555
          name: jmx
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 9092
          timeoutSeconds: 1
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 500Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kafka-configmap
          name: brokerconfig
        - mountPath: /etc/kafka
          name: config
        - mountPath: /opt/kafka/logs
          name: brokerlogs
        - mountPath: /opt/kafka/libs/extensions
          name: extensions
        - mountPath: /var/lib/kafka/data
          name: data
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /bin/bash
        - /etc/kafka-configmap/init.sh
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ADVERTISE_ADDR
          value: kafka.openshift-logging.svc.cluster.local
        image: solsson/kafka-initutils@sha256:f6d9850c6c3ad5ecc35e717308fddb47daffbde18eb93e98e031128fe8b899ef
        imagePullPolicy: IfNotPresent
        name: init-config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kafka-configmap
          name: brokerconfig
        - mountPath: /etc/kafka
          name: config
        - mountPath: /opt/kafka/libs/extensions
          name: extensions
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: kafka
        name: brokerconfig
      - emptyDir: {}
        name: brokerlogs
      - emptyDir: {}
        name: config
      - emptyDir: {}
        name: extensions
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: data
      namespace: openshift-logging
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      volumeMode: Filesystem
