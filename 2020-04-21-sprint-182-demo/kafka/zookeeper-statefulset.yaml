apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: zookeeper
    component: zookeeper
    provider: openshift
  name: zookeeper
  namespace: openshift-logging
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: zookeeper
  serviceName: zookeeper
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: zookeeper
        component: zookeeper
        provider: openshift
    spec:
      containers:
      - command:
        - ./bin/zookeeper-server-start.sh
        - /etc/kafka/zookeeper.properties
        env:
        - name: KAFKA_LOG4J_OPTS
          value: -Dlog4j.configuration=file:/etc/kafka/log4j.properties
        image: solsson/kafka:2.4.1
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -ce
              - kill -s TERM 1; while $(kill -0 1 2>/dev/null); do sleep 1; done
        name: zookeeper
        ports:
        - containerPort: 2181
          name: client
          protocol: TCP
        - containerPort: 2888
          name: peer
          protocol: TCP
        - containerPort: 3888
          name: leader-election
          protocol: TCP
        resources:
          limits:
            memory: 120Mi
          requests:
            cpu: 10m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kafka
          name: config
        - mountPath: /opt/kafka/logs
          name: zookeeperlogs
        - mountPath: /var/lib/zookeeper
          name: data
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /bin/bash
        - /etc/kafka-configmap/init.sh
        image: solsson/kafka-initutils@sha256:f6d9850c6c3ad5ecc35e717308fddb47daffbde18eb93e98e031128fe8b899ef
        imagePullPolicy: IfNotPresent
        name: init-config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kafka-configmap
          name: configmap
        - mountPath: /etc/kafka
          name: config
        - mountPath: /var/lib/zookeeper
          name: data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          defaultMode: 420
          name: zookeeper
        name: configmap
      - emptyDir: {}
        name: config
      - emptyDir: {}
        name: zookeeperlogs
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: data
      namespace: openshift-logging
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      volumeMode: Filesystem
